name: Self-update
on:
  workflow_dispatch:
      inputs:
        version:
          description: 'Not uset (only for test)'
          required: false
 # schedule:
#    - cron: "0 13 * * *" # every day at 1 pm
jobs:
  build:
    runs-on: macos-11
    steps:
      - name: Check out realm repo
        uses: actions/checkout@v2
        with:
          path: main

      - name: Check out package repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: realm/realm-cocoa
          path: realm

      - name: Get latest realm version
        id: rVer
        run: |
           cd realm
           echo "::set-output name=realm_version::$(./build.sh get-version)"
           echo "::set-output name=realm_versionV::v$(./build.sh get-version)"

      - name: Getting latest binares version
        id: realmPrebuiltR
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: pcpl2/RealmPrebuilt
          excludes: prerelease, draft

      - name: Tests
        run: |
          echo ${{ steps.rVer.outputs.realm_version }}
          echo ${{ steps.realmPrebuiltR.outputs.release  }}

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Build Realm
        env: 
          REALM_XCODE_VERSION: '13.0'
        run: |
          cd realm
          git checkout ${{ steps.rVer.outputs.realm_versionV }}
          ./build.sh xcframework ios
          cd ..
          mkdir bRealm
          mkdir bRealmSwift
          cp -R ./realm/build/ios/swift-13.0/Realm.xcframework ./bRealm
          cp -R ./realm/build/ios/swift-13.0/RealmSwift.xcframework ./bRealmSwift

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Make Realm.xcframework.zip file
        uses: papeloto/action-zip@v1
        with:
          files: ./bRealm
          dest: Realm_13.xcframework.zip

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Make RealmSwift.xcframework.zip file
        uses: papeloto/action-zip@v1
        with:
          files: ./bRealmSwift
          dest: RealmSwift_13.xcframework.zip

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV 
        name: Calculate checksum for files 
        id: rSha
        run: |
           echo "::set-output name=r_sha::$(shasum -a 256 Realm_13.xcframework.zip | grep -o '^\S*')"
           echo "::set-output name=rs_sha::$(shasum -a 256 RealmSwift_13.xcframework.zip | grep -o '^\S*')"

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Generate Package.swift
        env: 
          R_VER: '${{ steps.rVer.outputs.realm_version }}'
          R_SHA: '${{ steps.rSha.outputs.r_sha }}'
          RS_SHA: '${{ steps.rSha.outputs.rs_sha }}'
        run: |
          cd main
          sudo chmod +x GeneratePackageSwift.sh
          ./GeneratePackageSwift.sh

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: make commit with new Package.swift
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updated realm version to ${{ steps.rVer.outputs.realm_versionV }}
          repository: ./main
          add_options: '-f'
          file_pattern: '*.swift'

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        uses: actions/upload-artifact@v2
        with:
          name: Realm_13.xcframework.zip
          path: Realm_13.xcframework.zip
          retention-days: 1

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        uses: actions/upload-artifact@v2
        with:
          name: RealmSwift_13.xcframework.zip
          path: RealmSwift_13.xcframework.zip
          retention-days: 1

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.rVer.outputs.realm_versionV }}
          release_name: ${{ steps.rVer.outputs.realm_versionV }}
          draft: false
          prerelease: false

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Upload Realm_13.xcframework.zip assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: Realm_13.xcframework.zip
          asset_path: ${{ github.workspace }}/Realm_13.xcframework.zip
          asset_content_type: application/octet-stream

      - if: steps.realmPrebuiltR.outputs.release != steps.rVer.outputs.realm_versionV
        name: Upload RealmSwift_13.xcframework.zip assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: RealmSwift_13.xcframework.zip
          asset_path: ${{ github.workspace }}/RealmSwift_13.xcframework.zip
          asset_content_type: application/octet-stream
